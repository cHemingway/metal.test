starting test execution
le.cpp(9) assertion failed [comparison]: 1 <= 0; [1 <= 0]
le.cpp(10) expectation succeeded [comparison]: 1 <= 1; [1 <= 1]
le.cpp(12) assertion failed [bitwise comparison]: 0b101 <= 0b100; [0b101 <= 0b100]
le.cpp(13) expectation failed [bitwise comparison]: 0b101 <= 0b010; [0b101 <= 0b10]
le.cpp(18) report: entering ranged test [{[a1.begin(), a1.end()], [a2.begin(), a2.end()]}]
le.cpp(18) assertion succeeded [comparison]: **range**[0]; [1 <= 1]
le.cpp(18) assertion failed [comparison]: **range**[1]; [2 <= 1]
le.cpp(18) assertion failed [comparison]: **range**[2]; [3 <= 2]
le.cpp(18) exiting ranged test: { executed : 3, warnings : 0, errors : 2}
le.cpp(19) report: entering ranged test [{[a2.begin(), a2.end()], [a1.begin(), a1.end()]}]
le.cpp(19) expectation succeeded [comparison]: **range**[0]; [1 <= 1]
le.cpp(19) expectation succeeded [comparison]: **range**[1]; [1 <= 2]
le.cpp(19) expectation succeeded [comparison]: **range**[2]; [2 <= 3]
le.cpp(19) exiting ranged test: { executed : 3, warnings : 0, errors : 0}
le.cpp(21) report: entering ranged test [{[a1.begin(), a1.end()], [a2.begin(), a2.end()]}]
le.cpp(21) assertion succeeded [bitwise comparison]: **range**[0]; [0b1 <= 0b1]
le.cpp(21) assertion failed [bitwise comparison]: **range**[1]; [0b10 <= 0b1]
le.cpp(21) assertion failed [bitwise comparison]: **range**[2]; [0b11 <= 0b10]
le.cpp(21) exiting ranged test: { executed : 3, warnings : 0, errors : 2}
le.cpp(22) report: entering ranged test [{[a2.begin(), a2.end()], [a1.begin(), a1.end()]}]
le.cpp(22) expectation succeeded [bitwise comparison]: **range**[0]; [0b1 <= 0b1]
le.cpp(22) expectation failed [bitwise comparison]: **range**[1]; [0b1 <= 0b10]
le.cpp(22) expectation succeeded [bitwise comparison]: **range**[2]; [0b10 <= 0b11]
le.cpp(22) exiting ranged test: { executed : 3, warnings : 1, errors : 0}
free tests : { executed : 8, warnings : 2, errors : 4}
full test report: { executed : 8, warnings : 2, errors : 4}