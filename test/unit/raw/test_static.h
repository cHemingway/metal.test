#include <metal/unit>


#define DUMMY_PREDICATE(x, y) (x == (y << 3))

#ifndef nopass

METAL_STATIC_ASSERT(1, "TestMessage");
METAL_STATIC_ASSERT_CLOSE(2.0, 2.5, 1.0);
METAL_STATIC_ASSERT_CLOSE(2.0, 1., 1.0);
METAL_STATIC_ASSERT_CLOSE_PERCENT(1.0, 1.1, 10);
METAL_STATIC_ASSERT_CLOSE_PERCENT(1.0, 0.9, 10);
METAL_STATIC_ASSERT_CLOSE_RELATIVE(1.0, 1.15, 0.2);
METAL_STATIC_ASSERT_CLOSE_RELATIVE(1.2, 1.0,  0.2);
METAL_STATIC_ASSERT_EQUAL(23,23);
METAL_STATIC_ASSERT_EQUAL_BITWISE(3,3);

METAL_STATIC_ASSERT_GE(2.1, 2.1);
METAL_STATIC_ASSERT_GE(4, 2.1);
METAL_STATIC_ASSERT_GE_BITWISE(0xFF, 0xF);
METAL_STATIC_ASSERT_GREATER(3,1);
METAL_STATIC_ASSERT_LE(3.2, 3.2);
METAL_STATIC_ASSERT_LE(-1, 3.2);
METAL_STATIC_ASSERT_LE_BITWISE(0, ~0);
METAL_STATIC_ASSERT_LESSER(1,2);

METAL_STATIC_ASSERT_NOT_EQUAL(2,0);
METAL_STATIC_ASSERT_NOT_EQUAL_BITWISE(0xDEADBEEF, ~0xDEADBEEF);
METAL_STATIC_ASSERT_PREDICATE(DUMMY_PREDICATE, 16, 2);

#endif

#ifdef plain
METAL_STATIC_ASSERT(0, " test message");
#endif

#ifdef close1
METAL_STATIC_ASSERT_CLOSE(2.0, 1.5, 0.25);
#endif

#ifdef close2
METAL_STATIC_ASSERT_CLOSE(2.0, 2.26, 0.25);
#endif

#ifdef close3
METAL_STATIC_ASSERT_CLOSE_PERCENT(1.49, 2.0, 25);
#endif

#ifdef close4
METAL_STATIC_ASSERT_CLOSE_RELATIVE(1.26, 1.0, 0.25);
#endif

#ifdef equal
METAL_STATIC_ASSERT_EQUAL(1,2);
#endif

#ifdef equal_be
METAL_STATIC_ASSERT_EQUAL_BITWISE(3,1);
#endif

#ifdef ge
METAL_STATIC_ASSERT_GE(1.7, 1.8);
#endif

#ifdef ge_be
METAL_STATIC_ASSERT_EQUAL_BITWISE(3,0);
#endif

#ifdef greater
METAL_STATIC_ASSERT_GREATER(1., 1.);
#endif

#ifdef le
METAL_STATIC_ASSERT_LE(2, 1);
#endif

#ifdef le_be
METAL_STATIC_ASSERT_EQUAL_BITWISE(0,1);
#endif

#ifdef lesser
METAL_STATIC_ASSERT_LESSER(1., 1.);
#endif

#ifdef predicate
METAL_STATIC_ASSERT_PREDICATE(DUMMY_PREDICATE, 16, 1);
#endif
